rootProject.gradle.projectsEvaluated {
	def PROJECTS = [
		"jenetics",
		"jenetics.ext",
		"jenetics.prog",
		"jenetics.xml"
	]

	final Set<Project> projects = project.subprojects
		.findAll { prj -> PROJECTS.contains(prj.name) }

	if (!projects.isEmpty()) {
		rootProject.task('alljavadoc', type: Javadoc) {
			description = 'Aggregates Javadoc API documentation of all subprojects.'
			group = JavaBasePlugin.DOCUMENTATION_GROUP

			source = projects.javadoc.source
//			exclude '**/internal/**'
			destinationDir rootProject.file("$rootProject.buildDir/docs/alljavadoc")
			classpath = rootProject.files(projects.javadoc.classpath)
//			title = "${project.name} documentation"
//
//			options {
//				linkSource = true
//				memberLevel = JavadocMemberLevel.PROTECTED
//				version = true
//				author = true
//				docEncoding = 'UTF-8'
//				charSet = 'UTF-8'
//				windowTitle = "${project.name} ${project.version}"
//				docTitle = "<h1>${project.name} ${project.version}</h1>"
//
//				tags 'apiNote:a:API Note:',
//					'implSpec:a:Implementation Requirements:',
//					'implNote:a:Implementation Note:'
//
//				links 'https://docs.oracle.com/en/java/javase/11/docs/api'
//			}
//
//			// Copy the doc-files.
//			doLast {
//				rootProject.copy {
//					from('src/main/java') {
//						include 'io/**/doc-files/*.*'
//					}
//					includeEmptyDirs = false
//					into destinationDir.path
//				}
//			}
		}
	}
}

//	val projects = project.subprojects
//		.filter { prj -> setOf(
//				"jenetics",
//				"jenetics.ext",
//				"jenetics.prog",
//				"jenetics.xml"
//			).contains(prj.name)
//		}
//
//	if (projects.isNotEmpty()) {
//		rootProject.tasks.register<Javadoc>("alljavadoc") {
//			description = "Aggregates Javadoc API documentation of all subprojects."
//			group = JavaBasePlugin.DOCUMENTATION_GROUP
//
//			//source = projects.javadoc.source
//			//classpath = rootProject.files(projects.javadoc.classpath)
//
//			exclude("**/internal/**")
//			setDestinationDir(file("$rootProject.buildDir/docs/alljavadoc"))
//			title = "${rootProject.name} documentation"
//
//			val doclet = options as StandardJavadocDocletOptions
//			doclet.memberLevel = JavadocMemberLevel.PROTECTED
//			doclet.version(true)
//			doclet.docEncoding = "UTF-8"
//			doclet.charSet = "UTF-8"
//			doclet.linkSource(true)
//			doclet.linksOffline(
//				"https://docs.oracle.com/en/java/javase/11/docs/api",
//				"${project.rootDir}/buildSrc/resources/javadoc/java.se"
//			)
//			doclet.windowTitle = "Jenetics ${project.version}"
//			doclet.docTitle = "<h1>Jenetics ${project.version}</h1>"
//			doclet.bottom = "&copy; ${Env.COPYRIGHT_YEAR} Franz Wilhelmst&ouml;tter  &nbsp;<i>(${Env.BUILD_DATE})</i>"
//			doclet.stylesheetFile = project.file("${project.rootDir}/buildSrc/resources/javadoc/stylesheet.css")
//
//			doclet.addStringOption("noqualifier", "io.jenetics.internal.collection")
//			doclet.tags = listOf(
//				"apiNote:a:API Note:",
//				"implSpec:a:Implementation Requirements:",
//				"implNote:a:Implementation Note:"
//			)
//		}
//	}
